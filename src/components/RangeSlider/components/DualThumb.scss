$range-track-height: rem(4px);
$range-thumb-size: rem(24px);
$range-thumb-border-size: rem(2px);
$range-thumb-shadow: (0 0 0 rem(1px) rgba(black, 0.2), shadow(faint));
$range-thumb-shadow-hover: (0 0 0 rem(1px) rgba(black, 0.4), shadow(faint));
$range-thumb-shadow-error: 0 0 0 rem(1px) color('red');
$range-thumb-shadow-focus: 0 0 0 rem(1px) color('indigo');

$range-dual-thumbs-border: rem(1px) solid color('ink', 'lighter');
$range-dual-thumbs-border-hover: rem(1px) solid color('sky', 'light');
$range-dual-thumbs-border-error: rem(1px) solid color('sky', 'light');
$range-dual-thumbs-border-focus: rem(1px) solid color('sky', 'light');

.Wrapper {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
}

.Rail {
  position: absolute;
  width: 100%;
  height: $range-track-height;
  border-radius: $range-thumb-size;
  cursor: pointer;

  --unselected-range: #{color('ink', 'lighter')};
  --selected-range: #{color('indigo')};
  --gradient-colors: var(--unselected-range, transparent) 0%,
    var(--unselected-range, transparent)
      var(--Polaris-RangeSlider-unselected-lower),
    var(--selected-range, transparent) var(--Polaris-RangeSlider-selected-lower),
    var(--selected-range, transparent) var(--Polaris-RangeSlider-selected-upper),
    var(--unselected-range, transparent)
      var(--Polaris-RangeSlider-unselected-upper),
    var(--unselected-range, transparent) 100%;
  background-image: linear-gradient(to right, var(--gradient-colors));
}

.LowerThumb {
}

.UpperThumb {
}

.Thumbs {
  width: $range-thumb-size;
  height: $range-thumb-size;
  border-radius: 50%;
  border: $range-dual-thumbs-border;
  background: linear-gradient(color('sky', 'lighter'), color('sky', 'light'));
}

.Output {
  .LowerThumb:hover + &,
  .LowerThumb:active + &,
  .LowerThumb:focus + & {
    opacity: 1;
    visibility: visible;
  }

  .UpperThumb:hover + &,
  .UpperThumb:active + &,
  .UpperThumb:focus + & {
    opacity: 1;
    visibility: visible;
  }
}

.OutputBubble {
  .DualThumbs:hover + .Output &,
  .DualThumbs:active + .Output &,
  .DualThumbs:focus + .Output & {
    transform: translateY(-$range-thumb-size);

    @include page-content-when-not-partially-condensed {
      transform: translateY(-($range-thumb-size / 2));
    }
  }
}

$range-lower-output-translate-x: calc(
  -50% + var(--Polaris-RangeSlider-output-factor-lower, 0) * #{$range-thumb-size}
);
$range-upper-output-translate-x: calc(
  -50% + var(--Polaris-RangeSlider-output-factor-upper, 0) * #{$range-thumb-size}
);

.LowerOutput {
  left: var(--Polaris-RangeSlider-selected-lower, 50%);
  transform: translateX($range-lower-output-translate-x);
}

.UpperOutput {
  left: var(--Polaris-RangeSlider-selected-upper, 50%);
  transform: translateX($range-upper-output-translate-x);
}
